@use '../../../styles/mixins' as *;
@use '../../../styles/breakpoints' as *;

.home {
  @include flex-column;
  gap: var(--spacing-lg);
  padding: 0;
  width: 100%;

  @include respond-to('md') {
    gap: var(--spacing-xl);
  }

  @include respond-to('lg') {
    gap: var(--spacing-xxl);
  }
}

.timer-section {
  @include flex-center-column;
  gap: var(--spacing-md);
  animation: fadeIn var(--transition-base) ease-in-out;

  @include respond-to('md') {
    gap: var(--spacing-lg);
  }

  @include respond-to('lg') {
    gap: var(--spacing-xl);
  }

  .cycles-info {
    margin-top: 0;
    padding: var(--spacing-sm) var(--spacing-md);
    background-color: var(--bg-secondary);
    border-radius: var(--radius-md);
    border: 1px solid var(--border-color);

    @include respond-to('md') {
      padding: var(--spacing-md) var(--spacing-lg);
      border-radius: var(--radius-lg);
    }

    .cycles-text {
      font-size: var(--font-size-sm);
      color: var(--text-secondary);
      font-weight: var(--font-weight-medium);

      @include respond-to('md') {
        font-size: var(--font-size-md);
      }

      @include respond-to('lg') {
        font-size: var(--font-size-lg);
      }
    }
  }
}

.info-card {
  animation: fadeIn var(--transition-base) ease-in-out 0.4s;

  .card-content {
    h3 {
      font-size: var(--font-size-2xl);
      color: var(--text-primary);
      margin-bottom: var(--spacing-lg);
    }

    .features-list {
      @include reset-list;
      @include flex-column;
      gap: var(--spacing-md);

      li {
        font-size: var(--font-size-base);
        color: var(--text-secondary);
        line-height: var(--line-height-relaxed);
        padding-left: var(--spacing-lg);
        position: relative;

        &::before {
          content: 'â€¢';
          position: absolute;
          left: 0;
          color: var(--color-primary);
          font-weight: var(--font-weight-bold);
        }

        strong {
          color: var(--text-primary);
          font-weight: var(--font-weight-semibold);
        }
      }
    }
  }
}

.stats-grid {
  display: grid;
  grid-template-columns: 1fr;
  gap: var(--spacing-md);
  animation: fadeIn var(--transition-base) ease-in-out 0.6s;

  @include respond-to('sm') {
    grid-template-columns: repeat(3, 1fr);
  }

  .stat-card {
    transition: all var(--transition-base);
    position: relative;
    overflow: hidden;

    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      height: 3px;
      background: var(--gradient-primary);
      opacity: 0;
      transition: opacity var(--transition-fast);
    }

    &:hover {
      transform: translateY(-4px);
      box-shadow: var(--shadow-lg);

      &::before {
        opacity: 1;
      }
    }

    .stat {
      @include flex-center-column;
      gap: var(--spacing-sm);
      padding: var(--spacing-lg) var(--spacing-md);

      .stat-value {
        font-size: var(--font-size-4xl);
        font-weight: var(--font-weight-bold);
        background: var(--gradient-primary);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        line-height: 1;

        @include respond-below('md') {
          font-size: var(--font-size-3xl);
        }
      }

      .stat-label {
        font-size: var(--font-size-sm);
        color: var(--text-secondary);
        text-align: center;
      }
    }
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
