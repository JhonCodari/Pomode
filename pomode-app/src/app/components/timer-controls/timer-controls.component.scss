@use '../../../styles/mixins' as *;
@use '../../../styles/breakpoints' as *;

.controls-container {
  display: flex;
  flex-direction: row;
  gap: var(--spacing-sm);
  width: 100%;
  max-width: 100%;
  margin: 0 auto;
  justify-content: center;
  align-items: stretch;
  padding: 0 var(--spacing-md);
  box-sizing: border-box;

  @include respond-to('sm') {
    gap: var(--spacing-sm);
  }

  @include respond-to('md') {
    max-width: var(--container-controls);
    gap: var(--spacing-lg);
    padding: 0;
  }

  .control-btn {
    flex: 1 1 0;
    min-width: 0;

    ::ng-deep .btn {
      width: 100%;
      padding: var(--spacing-sm) var(--spacing-xs);
      font-size: clamp(0.6875rem, 2vw, var(--font-size-sm));
      min-height: var(--button-min-height-mobile);
      gap: calc(var(--spacing-xs) * 0.75);

      @include respond-to('sm') {
        padding: var(--spacing-sm) var(--spacing-sm);
        font-size: var(--font-size-sm);
        min-height: var(--button-min-height-tablet);
        gap: var(--spacing-xs);
      }

      @include respond-to('md') {
        padding: var(--spacing-md) var(--spacing-lg);
        font-size: var(--font-size-base);
        min-height: var(--button-min-height-desktop);
        gap: var(--spacing-sm);
      }

      @include respond-to('lg') {
        font-size: var(--font-size-lg);
        min-height: var(--button-height-2xl);
      }
    }

    &:hover:not(:disabled) {
      transform: translateY(calc(-1 * var(--spacing-xs) / 2));
      box-shadow: var(--shadow-lg);
    }

    &:active:not(:disabled) {
      transform: translateY(0);
    }
  }
}
